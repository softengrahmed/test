provider \"aws\" {\n  region = var.region\n}\n\nresource \"aws_vpc\" \"main\" {\n  cidr_block = var.vpc_cidr\n}\n\nresource \"aws_subnet\" \"public\" {\n  count             = length(var.public_subnet_cidrs)\n  vpc_id            = aws_vpc.main.id\n  cidr_block        = var.public_subnet_cidrs[count.index]\n  map_public_ip_on_launch = true\n}\n\nresource \"aws_subnet\" \"private\" {\n  count             = length(var.private_subnet_cidrs)\n  vpc_id            = aws_vpc.main.id\n  cidr_block        = var.private_subnet_cidrs[count.index]\n}\n\nresource \"aws_internet_gateway\" \"gw\" {\n  vpc_id = aws_vpc.main.id\n}\n\nresource \"aws_nat_gateway\" \"gw\" {\n  allocation_id = aws_eip.nat.id\n  subnet_id     = aws_subnet.public[0].id\n}\n\nresource \"aws_eip\" \"nat\" {\n  vpc = true\n}\n\nresource \"aws_route_table\" \"public\" {\n  vpc_id = aws_vpc.main.id\n\n  route {\n    cidr_block = \"0.0.0.0/0\"\n    gateway_id = aws_internet_gateway.gw.id\n  }\n}\n\nresource \"aws_route_table\" \"private\" {\n  vpc_id = aws_vpc.main.id\n\n  route {\n    cidr_block = \"0.0.0.0/0\"\n    nat_gateway_id = aws_nat_gateway.gw.id\n  }\n}\n\nresource \"aws_security_group\" \"web_sg\" {\n  vpc_id = aws_vpc.main.id\n\n  ingress {\n    from_port   = 80\n    to_port     = 80\n    protocol    = \"tcp\"\n    cidr_blocks = [\"0.0.0.0/0\"]\n  }\n\n  egress {\n    from_port   = 0\n    to_port     = 0\n    protocol    = \"-1\"\n    cidr_blocks = [\"0.0.0.0/0\"]\n  }\n}\n\nresource \"aws_instance\" \"web\" {\n  count         = var.web_instance_count\n  ami           = var.web_ami\n  instance_type = var.web_instance_type\n  subnet_id     = aws_subnet.public[count.index].id\n  security_groups = [aws_security_group.web_sg.name]\n}\n\nresource \"aws_lb\" \"app_lb\" {\n  name               = \"app-lb\"\n  internal           = false\n  load_balancer_type = \"application\"\n  security_groups    = [aws_security_group.web_sg.id]\n  subnets            = aws_subnet.public[*].id\n}\n\nresource \"aws_autoscaling_group\" \"web_asg\" {\n  desired_capacity     = var.asg_desired_capacity\n  max_size             = var.asg_max_size\n  min_size             = var.asg_min_size\n  vpc_zone_identifier  = aws_subnet.public[*].id\n  launch_configuration = aws_launch_configuration.web_lc.id\n}\n\nresource \"aws_launch_configuration\" \"web_lc\" {\n  name          = \"web-lc\"\n  image_id      = var.web_ami\n  instance_type = var.web_instance_type\n  security_groups = [aws_security_group.web_sg.id]\n}\n\nresource \"aws_db_instance\" \"db\" {\n  allocated_storage    = var.db_allocated_storage\n  engine               = var.db_engine\n  engine_version       = var.db_engine_version\n  instance_class       = var.db_instance_class\n  name                 = var.db_name\n  username             = var.db_username\n  password             = var.db_password\n  skip_final_snapshot  = true\n  vpc_security_group_ids = [aws_security_group.db_sg.id]\n  db_subnet_group_name = aws_db_subnet_group.main.name\n}\n\nresource \"aws_db_subnet_group\" \"main\" {\n  name       = \"main\"\n  subnet_ids = aws_subnet.private[*].id\n}\n\nresource \"aws_security_group\" \"db_sg\" {\n  vpc_id = aws_vpc.main.id\n\n  ingress {\n    from_port   = 3306\n    to_port     = 3306\n    protocol    = \"tcp\"\